%% QUICK SETTINGS

task            = 1;        % passive task or orthogonal task
fixfrac         = 1;        % fraction size of fixation bull

%% COUNTERBALANCING SETTINGS
% trial settings
n_segments      = 8;                    % number of segments per block
n_blocks        = 10;                   % number of blocks
n_distr         = 2;                    % number of distributions
n_freq          = 2;                    % number of center frequencies
n_probs         = 16;                   % number probabilities

tps             = 60;                  % trails per segment
tpb             = n_segments * tps;     % trails per blocks

% ommision settings
opb             = [0];                  % ommision trails per segment per condition 
n_ommis_bl      = 1;                    % number of ommission conditions

% block settings
n_freq_bl       = 8;                    % total number of center frequencys over blocks
n_surp_bl       = 0;                    % number of surprise conditions over blocks


%% STIMULUS SETTINGS
% stimulus settings
min_prob        = 0.05;                 % set miniminum probability 
stim_probs      = logistic_func(n_probs, calc_logistic_growth(min_prob, n_probs));  % calculate stim probs
dist_cent       = [100 500 1000 5000 10000];                                        % center frequencies (n_distr)
dist_width      = [1 1 1 1 1];                                                      % width of distribution (n_distr)

% timings
stim_t          = 200;                  % stimulus presentation length
iti             = 50;                   % inter trial interval
ibi             = 16000;                % inter block interval
isi             = 0;                    % inter segment interval
ramp_ops        = 0;                    % rampup of stimuli
ramp_dns        = 0;                    % rampdown of stimuli
countd          = .8;                   % countdown speed for new block

% misc. settings
c3              = ones(1,3)*255;        % set color white
backgr          = round(0.5*c3);        % set background color (0=black, 1=white, .5=meangrey)
textcol         = c3*1;                 % set text color
fontsize        = 36;                   % font size in pixels

% fixation bull parameters
bull_dim_fact       = .5;              % dim factor of bullseye fixation
bull_dim_col        = [0.7 0.7 0.7];    
bull_eye_col        = [0 0 0];
bull_in_col         = [1 1 1];
bull_in_col_cor     = [0 1 0];
bull_in_col_inc     = [1 0 0];
bull_out_col        = [0 0 0];
bull_fixrads        = fixfrac * [44 20 12];        % midpoint, inner_ring, outer_ring size


%% INSTRUCTIONS SETTINGS


%% MONITOR SETTINGS
switch setup

    case 0          % windows pc
        % screen info
        disp_dist       = 500;                          % display distance in mm
        screen_number   = max(Screen('Screens'));       % always use 2nd screen (or only monitor)
        [screen_width, screen_height] = Screen('DisplaySize', screen_number);
        hz              = round(Screen('FrameRate', screen_number));
        full_screen     = 1;                            % 

        % path and invironment info
        base_path       = pwd;
        environment     = 'Windows PC';
        Screen( 'Preference', 'SkipSyncTests', 1);

    case 1          % macbook
        % screen info
        disp_dist       = 500;                          % display distance in mm
        screen_height   = 180;   % mm
        screen_width    = 285;   % mm
        hz              = 60;
        screen_number   = 0;
        full_screen     = 1;      

        % path and invironment info
        base_path       = pwd;
        environment     = 'Macbook';
        Screen( 'Preference', 'SkipSyncTests', 1);

    case 2          % fMRI
        % screen info
        disp_dist       = 500;                          % display distance in mm
        screen_number   = max(Screen('Screens'));       % always use 2nd screen (or only monitor)
        [screen_width, screen_height] = Screen('DisplaySize', screen_number);
        hz              = round(Screen('FrameRate', screen_number));
        full_screen     = 1;                            % 

        % path and invironment info
        base_path       = pwd;
        environment     = 'fMRI';

    case 3          % MEG
        % screen info
        disp_dist       = 500;                          % display distance in mm
        screen_number   = max(Screen('Screens'));       % always use 2nd screen (or only monitor)
        [screen_width, screen_height] = Screen('DisplaySize', screen_number);
        hz              = round(Screen('FrameRate', screen_number));
        full_screen     = 1;                            % 

        % path and invironment info
        base_path       = pwd;
        environment     = 'MEG';
end
% other screen settings
dispsize    = [screen_width screen_height];
pixsize     = Screen('Rect', screen_number);
w_px=pixsize(3); h_px=pixsize(4);


%% KEY/BUTTON SETTINGS




%% TRANSFORM PRESENTATION INTO PIXEL DIMENSION (FROM DEGREE)


%% CREATE PROBABILITY MATRIX


%% DO LOUDNESS EQUALISATION

% display warning if stimulus settings do not sum to 1
if mean(sum(stim_probs)) < 1
    warning('Probabilities in `stim_probs` do not sum to 1; [nr: %s] - please check row 29 of settings', num2str(find(sum(stim_probs) < 1)))
end